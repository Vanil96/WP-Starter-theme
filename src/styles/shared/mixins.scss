@use 'variables' as var;

@mixin sm {
  @media (min-width: var.$breakpoint-sm) {
    @content;
  }
}

@mixin md {
  @media (min-width: var.$breakpoint-md) {
    @content;
  }
}

@mixin lg {
  @media (min-width: var.$breakpoint-lg) {
    @content;
  }
}

@mixin xl {
  @media (min-width: var.$breakpoint-xl) {
    @content;
  }
}



@mixin rounded($radius: 5px) {
    border-radius: $radius;
}

@mixin shadow($x: 0, $y: 4px, $blur: 8px, $color: rgba(0, 0, 0, 0.1)) {
    box-shadow: $x $y $blur $color;
}

@mixin flex($direction: row, $justify: flex-start, $align: stretch) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}

@mixin transition($property: all, $duration: 0.3s, $timing: ease) {
    transition: $property $duration $timing;
}


//animations
@mixin fade-in($duration: 1s) {
    animation: fadein $duration ease-in;
    @keyframes fadein {
      from { opacity: 0; }
      to   { opacity: 1; }
    }
  }

  @mixin fade-out($duration: 1s) {
    animation: fadeout $duration ease-out;
    @keyframes fadeout {
      from { opacity: 1; }
      to   { opacity: 0; }
    }
  }

  @mixin slide-in-left($duration: 1s) {
    animation: slideinleft $duration ease-in;
    @keyframes slideinleft {
      from { transform: translateX(-100%); }
      to   { transform: translateX(0); }
    }
  }

  @mixin slide-out-right($duration: 1s) {
    animation: slideoutright $duration ease-out;
    @keyframes slideoutright {
      from { transform: translateX(0); }
      to   { transform: translateX(100%); }
    }
  }

  @mixin scale-up($duration: 1s) {
    animation: scaleup $duration ease-in-out;
    @keyframes scaleup {
      from { transform: scale(0); }
      to   { transform: scale(1); }
    }
  }

  @mixin rotate($duration: 1s) {
    animation: rotation $duration infinite linear;
    @keyframes rotation {
      from { transform: rotate(0deg); }
      to   { transform: rotate(359deg); }
    }
  }